<!DOCTYPE aesl-source>
<network>
    <node name="e-puck" >ontimer
var i
var v

i = 0
var meanV = 0
var minV = 300
while i &lt; 60 do
	v = camR[i] + camG[i] + camB[i]
	meanV = meanV + v
	if v &lt; minV then
		minV = v
	end
	i = i + 1
end
meanV = meanV / 60
var threshold = (3 * meanV + minV) / 4

var minPos = 0
var minCount = 0
var firstBlack = -1
var lastBlack
i = 0
while i &lt; 60 do
	v = camR[i] + camG[i] + camB[i]
	if v &lt;= threshold then
		minPos = minPos + i
		minCount = minCount + 1
		lastBlack = i
		if firstBlack == -1 then
			firstBlack = i
		end
	end
	i = i + 1
end

var deltaPos = 30
var deltaDist = 0
if minCount > 0 then
	deltaPos = 30 - (minPos / minCount)
	deltaDist = 10 - (lastBlack - firstBlack)
end

if deltaDist > 0 then
	deltaDist = deltaDist * 2
end
leftSpeed = deltaPos * 4 + deltaDist * 8
rightSpeed = -deltaPos * 4 + deltaDist * 8</node>
</network>
