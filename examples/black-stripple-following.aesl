<!DOCTYPE aesl-source>
<network>


<!--list of global events-->
<event size="2" name="out"/>


<!--list of constants-->


<!--show keywords state-->
<keywords flag="true"/>


<!--node e-puck0-->
<node nodeId="1" name="e-puck0">var i
var img[60]
var meanV
var minV
var maxV
var threshold 
var minPos
var minCount
var deltaPos
var blackCount

onevent camera

call math.add(img, cam.red, cam.green)
call math.add(img, img, cam.blue)
call math.stat(img, minV, maxV, meanV)
threshold = (3 * meanV + minV) / 4

minPos = 0
minCount = 0
blackCount = 0
i = 0
while i &lt; 60 do
	if img[i] &lt;= threshold then
		minPos = minPos + i
		minCount = minCount + 1
		blackCount ++
	end
	i = i + 1
end

deltaPos = 30
if minCount > 0 then
	deltaPos = 30 - (minPos / minCount)
end
blackCount -= 30

emit out [deltaPos, blackCount]
speed.left = -deltaPos * 8 - blackCount * 12
speed.right = deltaPos * 8 - blackCount * 12</node>


</network>
